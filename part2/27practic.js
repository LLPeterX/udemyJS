"use strict";

// задания для практики

//1. Какое будет выведено значение: let x = 5; alert( x++ ); ?
// Ответ: 5

//2. Чему равно такое выражение: [ ] + false - null + true ?
console.log([] + false - null + true); // NaN.
// Если разбить выражение на отдельные операторы:
console.log(` 1. [1,7]+false=${[1,7]+false} type=${typeof([]+false) }`); // строка "false", а не boolean!
console.log(` 2. "false"-null = ${"false"-null} type=${typeof("false"-null)}`); // NaN
console.log(` 3. NaN+true=${NaN+true} type=${typeof(NaN+true)}`); // NaN
// Пустой массив в операции "+" приводится к пустой строке
//    Непустой массив, например, [1,7], в нашем случае дал бы строку "1,7false".
//    аналогично [1,7] + [2,4] => "1,72,4"
// арифаметическая оперяция с нечисловыми данными ("false"-null) дает NaN
// далее любые операции с NaN дают NaN


//3. let y = 1; let x = y = 2; alert(x);
// Ответ: 2

//4. Чему равна сумма [ ] + 1 + 2?
console.log([ ] + 1 + 2); // 12
// Пустой массив преобразуется в строку, остальное тоже как строки

//5. Что выведет этот код: alert( "1"[0] )? // "1"
// для строк str[i] возвращает i-й символ строки

//6. Чему равно 2 && 1 && null && 0 && undefined ?
console.log(2 && 1 && null && 0 && undefined); // null
// 1) 2 && 1 => 1. Т.к. оба выражения верны, возвращается последний
// 2) 1 && null => null. null - эквивалент false, на нем всё обрывается. Оператор && обрывается на false
// 3) null && 0 => null  - на самом деле сюда выполнение нет доходит
// 4) null && undefined => null - то же не проверяется


// 7.Есть ли разница между выражениями? !!( a && b ) и (a && b)?
// Ответ: нет

//8. Что выведет этот код: alert( null || 2 && 3 || 4 ); ?
console.log( null || 2 && 3 || 4 ); // 3
// см. таблицу приоритетов операторов. Первый &&
// 1)  2 && 3 => 3
// 2) null || 3 => 3
// 3) 3|| 4 => 3: В операторе || возвращается первый аргумент (в отличие от &&)
// оператор || завершается на true, а т.к. 3=true, то его и возвращает. 

// 9. a = [1, 2, 3]; b = [1, 2, 3]; Правда ли что a == b ?
// нет. Это разные объкты, у них разные адреса в памяти.
// Можно проверить: console.log(a==b) => false


//10. Что выведет этот код: alert( +"Infinity" ); 
console.log( +"Infinity"); // Infinity
// Infinity - это свойство класса Number

//11. Верно ли сравнение: "Ёжик" > "яблоко"?
console.log("Ёжик" > "яблоко"); // false
// потому что код 'я' больше кода 'Ё'. Заглавные буквы идут перед строчными.

//12. 
console.log(0 || "" || 2 || undefined || true || false); 
// Ответ: 2
// Оператор || прераывает выполнение выражения на истине, т.е. 2
// 0 и "" возвращают false